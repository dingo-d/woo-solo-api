name: Continuous integration code quality checks

on:
  push:
    branches:
      - "develop"
      - "main"
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  syntax_errors:
    name: "1️⃣ Syntax errors checks"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "7.4"
          coverage: "none"

      - name: "Checkout code"
        uses: "actions/checkout@v3"

      - name: "Install dependencies"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"
          # Bust the cache at least once a month - output format: YYYY-MM-DD.
          custom-cache-suffix: $(date -u -d "-0 month -$(($(date +%d)-1)) days" "+%F")

      - name: "Check source code for syntax errors"
        run: "composer exec -- parallel-lint src/ tests/"

  integration_tests:
    name: "2️⃣ Integration tests"
    needs:
      - "syntax_errors"
    runs-on: "ubuntu-latest"
    continue-on-error: ${{ matrix.allowed_failure }}
    strategy:
      fail-fast: false
      matrix:
        php: [ '7.4' ]
        allowed_failure: [ false ]
        dependencies:
          - "lowest"
          - "highest"
        include:
          - php: '8.0'
            allowed_failure: true
          - php: '8.1'
            allowed_failure: true
          - php: '8.2'
            allowed_failure: true
        exclude:
          - php: '8.1'
            allowed_failure: true
            dependencies: "lowest" # Fails due to PHP parser error on a specific version.
    steps:
      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php }}"
          coverage: "xdebug"

      - name: "Checkout code"
        uses: "actions/checkout@v3"

      - name: "Install dependencies"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          custom-cache-suffix: $(date -u -d "-0 month -$(($(date +%d)-1)) days" "+%F")

      - name: "Setup test suite"
        run: "vendor/bin/wp-pest setup plugin --plugin-slug=woo-solo-api --skip-delete"

      - name: "Execute unit tests"
        run: "./vendor/bin/pest --group=unit"

      - name: "Execute integration tests"
        run: "./vendor/bin/pest --group=integration"

#      - name: "Upload unit test coverage to Codecov"
#        if:
#        env:
#          CODECOV_TOKEN: "${{ secrets.CODECOV_TOKEN }}"
#        if: "${{ env.CODECOV_TOKEN && matrix.php == '7.4' && matrix.dependencies == 'highest' }}"
#        uses: "codecov/codecov-action@v3"
#        with:
#          token: "${{ env.CODECOV_TOKEN }}"
#          files: "./tests/coverage/clover.xml"
#          flags: "unittests"
#          name: "libs-codecov"
#          fail_ci_if_error: "true"
#
#      - name: "Upload integration test coverage to Codecov"
#        if:
#        env:
#          CODECOV_TOKEN: "${{ secrets.CODECOV_TOKEN }}"
#        if: "${{ env.CODECOV_TOKEN && matrix.php == '7.4' && matrix.dependencies == 'highest' }}"
#        uses: "codecov/codecov-action@v3"
#        with:
#          token: "${{ env.CODECOV_TOKEN }}"
#          files: "./tests/coverage/clover.xml"
#          flags: "integrationtests"
#          name: "libs-codecov"
#          fail_ci_if_error: "true"

  static_analysis:
    name: "3️⃣ Static analysis checks"
    needs:
      - "syntax_errors"
    runs-on: "ubuntu-latest"
    continue-on-error: ${{ matrix.allowed_failure }}
    strategy:
      fail-fast: false
      matrix:
        php: [ '7.4' ]
        allowed_failure: [ false ]
        include:
          - php: '8.0'
            allowed_failure: true
          - php: '8.1'
            allowed_failure: true
          - php: '8.2'
            allowed_failure: true
    steps:
      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php }}"
          coverage: "none"

      - name: "Checkout code"
        uses: "actions/checkout@v3"

      - name: "Validate Composer configuration"
        run: "composer validate --strict"

      - name: "Install dependencies"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"
          custom-cache-suffix: $(date -u -d "-0 month -$(($(date +%d)-1)) days" "+%F")

      - name: "Execute static analysis"
        run: "composer run test:types"

  coding_standards:
    name: "4️⃣ Coding standards checks"
    needs:
      - "syntax_errors"
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        php: [ '7.4' ]
        allowed_failure: [ false ]
        include:
          - php: '8.0'
            allowed_failure: true # Change to false once php-compatibility 10 comes out
          - php: '8.1'
            allowed_failure: true # Change to false once php-compatibility 10 comes out
          - php: '8.2'
            allowed_failure: true # Change to false once php-compatibility 10 comes out
    steps:
      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php }}"
          coverage: "none"
          tools: "cs2pr"

      - name: "Checkout code"
        uses: "actions/checkout@v3"

      - name: "Check adherence to EditorConfig"
        uses: "greut/eclint-action@v0"

      - name: "Install dependencies"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"
          custom-cache-suffix: $(date -u -d "-0 month -$(($(date +%d)-1)) days" "+%F")

      - name: "Check coding style"
        run: |
          composer run test:style -- -q --report=checkstyle | cs2pr

  exported_files:
    name: "5️⃣ Exported files checks"
    needs:
      - "syntax_errors"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v3"

      - name: "Check exported files"
        run: |
          EXPECTED="CHANGELOG.md,LICENSE,README.md,composer.json,composer.lock,woo-solo-api.php,uninstall.php"
          CURRENT="$(git archive HEAD | tar --list --exclude="src" --exclude="src/*" --exclude="views" --exclude="views/*" --exclude="assets" --exclude="assets/*" | paste -s -d ",")"
          echo "CURRENT=${CURRENT}"
          echo "EXPECTED=${EXPECTED}"
          test "${CURRENT}" = "${EXPECTED}"
